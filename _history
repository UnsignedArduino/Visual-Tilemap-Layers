{"entries":[{"timestamp":1742701005031,"editorVersion":"2.0.40","changes":[{"type":"edited","filename":"pxt.json","patch":[{"start1":168,"length1":56,"diffs":[[1,"        \"assets.json\"\n"]]},{"start1":197,"length1":44,"diffs":[[1,""]]},{"start1":229,"length1":45,"diffs":[[1,"    \"languageRestriction\": \"javascript-only\",\n    \"additionalFilePaths\": []\n"]]}]},{"type":"added","filename":"test.ts","value":"// tests go here; this will not be compiled when this package is used as an extension.\n"},{"type":"added","filename":"main.blocks","value":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <variables></variables>\n  <block type=\"pxt-on-start\" x=\"0\" y=\"0\"></block>\n</xml>"},{"type":"added","filename":"visualTileMapLayers.ts","value":"//% block=\"Visual TileMap Layers\"\n//% color=\"#4B6584\"\n//% icon=\"\\uf279\"\n//% group=\"['Visual TileMap Layer class', 'Easy functions']\"\nnamespace VisualTileMapLayers {\n    export class VisualTileMapLayer {\n        protected _renderable: scene.Renderable = null;\n        protected _visible: boolean;\n\n        constructor(public tilemap: tiles.TileMapData, zIndex: number, public visible: boolean = true) {\n            this._renderable = scene.createRenderable(\n                zIndex,\n                (screen: Image, camera: scene.Camera) => {\n                    const tileSize = this.tilemap.getTileImage(0).width;\n\n                    const topRow = Math.floor(camera.top / tileSize);\n                    const bottomRow = topRow + Math.ceil(scene.screenHeight() / tileSize) + 1;\n                    const leftCol = Math.floor(camera.left / tileSize);\n                    const rightCol = leftCol + Math.ceil(scene.screenWidth() / tileSize) + 1;\n\n                    const topOffset = camera.top % tileSize;\n                    const leftOffset = camera.left % tileSize;\n\n                    for (let row = topRow; row < bottomRow; row++) {\n                        for (let col = leftCol; col < rightCol; col++) {\n                            const img = this.tilemap.getTileImage(this.tilemap.getTile(col, row));\n                            screen.drawTransparentImage(\n                                img,\n                                (col - leftCol) * tileSize - leftOffset,\n                                (row - topRow) * tileSize - topOffset\n                            );\n                        }\n                    }\n                },\n                () => {\n                    return this.visible;\n                }\n            );\n        }\n\n        public get zIndex(): number {\n            return this._renderable.z;\n        }\n\n        public set zIndex(z: number) {\n            this._renderable.z = z;\n        }\n\n        /**\n         * Destroy the visual tilemap layer.\n         */\n        //% block=\"destroy visual tilemap layer $this\"\n        //% group=\"Visual TileMap Layer class\"\n        //% this.defl=layer\n        //% this.shadow=variables_get\n        //% weight=30\n        public destroy() {\n            this._renderable.destroy();\n        }\n    }\n\n    let _visualTileMapLayers: VisualTileMapLayer[] = [];\n\n    /**\n     * Easy method to add a visual tilemap layer. \n     * \n     * Remember the main tilemap is at Z index -1, and higher Z index is rendered later on the screen!\n     */\n    //% block=\"add visual tilemap layer $tilemap on z index $zIndex\"\n    //% group=\"Easy functions\"\n    //% tilemap.shadow=tiles_tilemap_editor\n    //% weight=100\n    export function addVisualTileMapLayer(tilemap: tiles.TileMapData, zIndex: number) {\n        _visualTileMapLayers.push(new VisualTileMapLayer(tilemap, zIndex));\n    }\n\n    /**\n     * Easy method to remove ALL visual tilemap layers on a certain Z index.\n     */\n    //% block=\"remove all visual tilemap layers on z index $zIndex\"\n    //% group=\"Easy functions\"\n    //% weight=90\n    export function deleteVisualTileMapLayers(zIndex: number) {\n        _visualTileMapLayers = _visualTileMapLayers.filter((vtml) => {\n            if (vtml.zIndex == zIndex) {\n                vtml.destroy();\n                return false;\n            } else {\n                return true;\n            }\n        })\n    }\n\n    /**\n     * Creates a visual tilemap layer object and returns to you directly to manage.\n     * \n     * Remember the main tilemap is at Z index -1, and higher Z index is rendered later on the screen!\n     */\n    //% block=\"create visual tilemap layer $tilemap on z index $zIndex\"\n    //% blockSetVariable=layer\n    //% group=\"Visual TileMap Layer class\"\n    //% tilemap.shadow=tiles_tilemap_editor\n    //% weight=80\n    //% hidden\n    export function createVisualTileMapLayer(tilemap: tiles.TileMapData, zIndex: number): VisualTileMapLayer {\n        return new VisualTileMapLayer(tilemap, zIndex);\n    }\n\n    /**\n     * Get the visual tilemap layer's tilemap.\n     */\n    //% block=\"get visual tilemap layer $vtml tilemap\"\n    //% group=\"Visual TileMap Layer class\"\n    //% vtml.defl=layer\n    //% vtml.shadow=variables_get\n    //% weight=75\n    //% hidden\n    export function getVisualTileMapLayerTileMap(vtml: VisualTileMapLayer): tiles.TileMapData {\n        return vtml.tilemap;\n    }\n\n    /**\n     * Set the visual tilemap layer's tilemap.\n     */\n    //% block=\"set visual tilemap layer $vtml tilemap to $tilemap\"\n    //% group=\"Visual TileMap Layer class\"\n    //% vtml.defl=layer\n    //% vtml.shadow=variables_get\n    //% tilemap.shadow=tiles_tilemap_editor\n    //% weight=70\n    //% hidden\n    export function setVisualTileMapLayerTileMap(vtml: VisualTileMapLayer, tilemap: tiles.TileMapData) {\n        vtml.tilemap = tilemap;\n    }\n\n    /**\n     * Get the visual tilemap layer's Z index.\n     */\n    //% block=\"get visual tilemap layer $vtml z index\"\n    //% group=\"Visual TileMap Layer class\"\n    //% vtml.defl=layer\n    //% vtml.shadow=variables_get\n    //% weight=65\n    //% hidden\n    export function getVisualTileMapLayerZIndex(vtml: VisualTileMapLayer): number {\n        return vtml.zIndex;\n    }\n\n    /** \n     * Set the visual tilemap layer's Z index. \n     * \n     * Remember the main tilemap is at Z index -1, and higher Z index is rendered later on the screen!\n     */\n    //% block=\"set visual tilemap layer $vtml z index to $z\"\n    //% group=\"Visual TileMap Layer class\"\n    //% vtml.defl=layer\n    //% vtml.shadow=variables_get\n    //% weight=60\n    //% hidden\n    export function setVisualTileMapLayerTileMapZIndex(vtml: VisualTileMapLayer, z: number) {\n        vtml.zIndex = z;\n    }\n\n    /**\n     * Get the visual tilemap layer's visibility.\n     */\n    //% block=\"get visual tilemap layer $vtml visibility\"\n    //% group=\"Visual TileMap Layer class\"\n    //% vtml.defl=layer\n    //% vtml.shadow=variables_get\n    //% weight=55\n    //% hidden\n    export function getVisualTileMapLayerVisibility(vtml: VisualTileMapLayer): boolean {\n        return vtml.visible;\n    }\n\n    /**\n     * Set the visual tilemap layer's visibility. \n     */\n    //% block=\"set visual tilemap layer $vtml visibility to $v\"\n    //% group=\"Visual TileMap Layer class\"\n    //% vtml.defl=layer\n    //% vtml.shadow=variables_get\n    //% weight=50\n    //% hidden\n    export function setVisualTileMapLayerTileMapVisibility(vtml: VisualTileMapLayer, v: boolean) {\n        vtml.visible = v;\n    }\n}\n"}]}],"snapshots":[{"timestamp":1742701005030,"editorVersion":"2.0.40","text":{"main.ts":" ","README.md":" ","assets.json":"","pxt.json":"{\n    \"name\": \"Visual-TileMap-Layers\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"device\": \"*\"\n    },\n    \"files\": [\n        \"main.ts\",\n        \"README.md\",\n        \"assets.json\"\n    ],\n    \"preferredEditor\": \"tsprj\",\n    \"languageRestriction\": \"javascript-only\",\n    \"additionalFilePaths\": []\n}\n"}}],"shares":[],"lastSaveTime":1742701294235}